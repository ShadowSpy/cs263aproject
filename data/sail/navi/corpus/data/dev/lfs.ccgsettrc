TJS_Grid0_7_3_Dirs_1
map=grid	efficiency=(1.0,0.0)	implicit=True	numFollowers=6	confidence=(5.666666666666667,0.4714045207910317)	directionRating=(5.0,1.4142135623730951)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=7	x=3	correct=True
take one movement towards the blue corridor , and stop
(lambda $0:a (and:<t*,t> (pre:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (blue:<ps,t> $1) (hall:<ps,t> $1)))))) (len:<a,<n,t>> $0 1:n) (move:<a,t> $0)))
LEFT[I](1,9,0);FORWARD(1,9,270);(0, 9, 270)
that s it
(intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $0:e true:t)))
(0, 9, 270)

KLS_Jelly0_4_5_Dirs_1
map=jelly	efficiency=(0.75,0.4330127018922193)	implicit=True	numFollowers=4	confidence=(5.25,0.82915619758885)	directionRating=(5.0,1.0)	annotated=True	targetFound=(0.75,0.4330127018922193)	valid=True	y=4	x=5	correct=True
follow the yellow path towards the coat rack
(lambda $0:a (and:<t*,t> (pre:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> hatrack:<ps,t>))) (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (honeycomb:<ps,t> $1))))) (move:<a,t> $0)))
FORWARD(15,20,0);(15, 19, 0)
at the coat rack take a right onto the blue path
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (blue:<ps,t> $1)))))) (dir:<a,<dir,t>> $0 right:dir) (turn:<a,t> $0) (pre:<a,<ps,t>> $0 (io:<<e,t>,e> hatrack:<ps,t>))))
FORWARD[I](15,19,0);RIGHT(15,18,0);(15, 18, 90)
take the blue path all the way to the end of the hall and at the corner , go left towards the easel
(lambda $0:a[] (and:<t*,t> (while:<a,<ps,t>> (i:<a[],<ind,a>> $0 0:ind) (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (blue:<ps,t> $1))))) (move:<a,t> (i:<a[],<ind,a>> $0 0:ind)) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 0:ind) (io:<<e,t>,e> (lambda $2:e (end:<ps,<ps,t>> $2 (io:<<e,t>,e> hall:<ps,t>))))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (post:<a,<t,t>> (i:<a[],<ind,a>> $0 1:ind) (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> easel:<ps,t>))) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) left:dir) (turn:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (pre:<a,<ps,t>> (i:<a[],<ind,a>> $0 1:ind) (io:<<e,t>,e> corner:<ps,t>))))
FORWARD(15,18,90);FORWARD(16,18,90);FORWARD(17,18,90);FORWARD(18,18,90);FORWARD(19,18,90);LEFT(20,18,90);(20, 18, 0)
at the easel , take a right onto the wood path and the very next section will be x
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (wood:<ps,t> $1)))))) (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir) (pre:<a,<ps,t>> $0 (io:<<e,t>,e> easel:<ps,t>)) (post:<a,<t,t>> $0 (intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $2:e (eq:<e,<e,t>> $2 (order:<<ps,t>,<<ps,n>,<n,ps>>> intersection:<ps,t> frontdist:<ps,n> 1:n))))))))
FORWARD[I](20,18,0);RIGHT(20,17,0);(20, 17, 90)

EDA_Grid0_4_2_Dirs_1
map=grid	efficiency=(1.0,0.0)	implicit=False	numFollowers=4	confidence=(5.5,0.8660254037844386)	directionRating=(5.25,0.82915619758885)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=4	x=2	correct=True
turn to face the yellow hallway
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (honeycomb:<ps,t> $1)))))) (turn:<a,t> $0)))
LEFT(3,5,0);LEFT(3,5,270);(3, 5, 180)
walk forward three times
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 3:n) (move:<a,t> $0)))
FORWARD(3,5,180);FORWARD(3,6,180);FORWARD(3,7,180);(3, 8, 180)

EMWC_L0_5_6_Dirs_1
map=l	efficiency=(0.75,0.4330127018922193)	implicit=False	numFollowers=4	confidence=(5.25,1.299038105676658)	directionRating=(5.0,0.7071067811865476)	annotated=True	targetFound=(0.75,0.4330127018922193)	valid=True	y=5	x=6	correct=True
place your back against the wall of the t intersection
(lambda $0:a (post:<a,<t,t>> $0 (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (wall:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> t_intersection:<ps,t>) $1)))) (orient:<ps,<dir,ps>> you:ps back:dir))))
RIGHT(23,18,0);(23, 18, 90)
turn right
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 right:dir) (turn:<a,t> $0)))
RIGHT(23,18,90);(23, 18, 180)
go forward along the brick hall five segments to the intersection with the stone hall
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (stone:<ps,t> $2)))) $1))))) (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (brick:<ps,t> $3))))) (len:<a,<n,t>> $0 5:n)))
FORWARD(23,18,180);FORWARD(23,19,180);FORWARD(23,20,180);FORWARD(23,21,180);FORWARD(23,22,180);(23, 23, 180)
you will pass a lamp and a hatrack
(and:<t*,t> (front:<ps,<ps,t>> (orient:<ps,<dir,ps>> you:ps back:dir) (a:<<e,t>,e> lamp:<ps,t>)) (front:<ps,<ps,t>> (orient:<ps,<dir,ps>> you:ps back:dir) (a:<<e,t>,e> hatrack:<ps,t>)))
(23, 23, 180)
turn right
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 right:dir) (turn:<a,t> $0)))
RIGHT(23,23,180);(23, 23, 270)
go forward along the stone hall one segment to the intersection with a bare concrete hall
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (a:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (cement:<ps,t> $2)))) $1))))) (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (stone:<ps,t> $3))))) (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 1:n)))
FORWARD(23,23,270);(22, 23, 270)
there will be a bench to your left
(front:<ps,<ps,t>> (orient:<ps,<dir,ps>> you:ps left:dir) (a:<<e,t>,e> sofa:<ps,t>))
(22, 23, 270)
this is position x
(intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $0:e true:t)))
(22, 23, 270)

KXP_L0_7_2_Dirs_1
map=l	efficiency=(1.0,0.0)	implicit=False	numFollowers=4	confidence=(6.0,0.0)	directionRating=(5.5,0.5)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=7	x=2	correct=True
face the fish walled area with no pink floors
(lambda $0:a (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (fish_w:<ps,t> $1) (not:<t,t> (rose:<ps,t> $1))))))))
LEFT(21,21,0);LEFT(21,21,270);(21, 21, 180)
go down two spaces
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (len:<a,<n,t>> $0 2:n) (dir:<a,<dir,t>> $0 forward:dir)))
FORWARD(21,21,180);FORWARD(21,22,180);(21, 23, 180)

TJS_L0_6_1_Dirs_1
map=l	efficiency=(0.752381,0.3299144271651579)	implicit=True	numFollowers=7	confidence=(5.285714285714286,1.749635530559413)	directionRating=(4.142857142857143,1.8070158058105021)	annotated=True	targetFound=(0.8571428571428571,0.3499271061118826)	valid=True	y=6	x=1	correct=True
down the grey hall to the red hall
(lambda $0:a (and:<t*,t> (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (stone:<ps,t> $1))))) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (brick:<ps,t> $2) (hall:<ps,t> $2)))))))
RIGHT[I](22,23,0);FORWARD[I](22,23,90);(23, 23, 90)
a left at the red hall
(lambda $0:a (and:<t*,t> (pre:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (brick:<ps,t> $1))))) (dir:<a,<dir,t>> $0 left:dir)))
LEFT(23,23,90);(23, 23, 0)
down the red hall , then another left onto the wooden hall , and then position x has a bench
(lambda $0:a[] (and:<t*,t> (while:<a,<ps,t>> (i:<a[],<ind,a>> $0 0:ind) (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (brick:<ps,t> $1) (hall:<ps,t> $1))))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) left:dir) (post:<a,<t,t>> (i:<a[],<ind,a>> $0 1:ind) (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (wood:<ps,t> $2) (hall:<ps,t> $2)))))) (post:<a,<t,t>> (i:<a[],<ind,a>> $0 1:ind) (intersect:<ps,<ps,t>> (a:<<e,t>,e> sofa:<ps,t>) x:ps))))
FORWARD(23,23,0);FORWARD[I](23,22,0);FORWARD[I](23,21,0);FORWARD[I](23,20,0);FORWARD[I](23,19,0);FORWARD[I](23,18,0);LEFT(23,17,0);(23, 17, 270)

WLH_L0_7_1_Dirs_1
map=l	efficiency=(0.3968254285714286,0.4633181060810495)	implicit=True	numFollowers=7	confidence=(5.428571428571429,1.0497813183356477)	directionRating=(4.571428571428571,0.9035079029052513)	annotated=True	targetFound=(0.42857142857142855,0.49487165930539345)	valid=True	y=7	x=1	correct=True
with your back to the wall turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0) (pre:<a,<t,t>> $0 (intersect:<ps,<ps,t>> (io:<<e,t>,e> wall:<ps,t>) (orient:<ps,<dir,ps>> you:ps back:dir)))))
LEFT[I](21,21,0);LEFT[I](21,21,270);LEFT(21,21,180);(21, 21, 90)
walk along the flowers to the hatrack
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> hatrack:<ps,t>)) (while:<a,<ps,t>> $0 (io:<<e,t>,e> rose:<ps,t>)) (move:<a,t> $0)))
FORWARD(21,21,90);FORWARD(22,21,90);(23, 21, 90)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(23,21,90);(23, 21, 0)
walk along the brick two alleys past the lamp
(lambda $0:a (and:<t*,t> (pass:<a,<ps,t>> $0 (io:<<e,t>,e> lamp:<ps,t>)) (move:<a,t> $0) (while:<a,<ps,t>> $0 (io:<<e,t>,e> brick:<ps,t>)) (len:<a,<n,t>> $0 2:n)))
FORWARD(23,21,0);FORWARD(23,20,0);FORWARD(23,19,0);(23, 18, 0)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
FORWARD[I](23,18,0);LEFT(23,17,0);(23, 17, 270)
move along the wooden floor to the chair
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> sofa:<ps,t>)) (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (wood:<ps,t> $1))))) (move:<a,t> $0)))
FORWARD(23,17,270);(22, 17, 270)
in the next block is a hatrack
(intersect:<ps,<ps,t>> (a:<<e,t>,e> hatrack:<ps,t>) (io:<<e,t>,e> (lambda $0:e (eq:<e,<e,t>> $0 (order:<<ps,t>,<<ps,n>,<n,ps>>> (lambda $1:e true:t) frontdist:<ps,n> 1:n)))))
(22, 17, 270)
this is x
(intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $0:e true:t)))
(22, 17, 270)

EMWC_Jelly0_6_4_Dirs_1
map=jelly	efficiency=(1.0,0.0)	implicit=True	numFollowers=5	confidence=(6.0,0.0)	directionRating=(6.0,0.0)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=6	x=4	correct=True
go forward one segment to the intersection with the pink-flowered carpet hall
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (rose:<ps,t> $2)))) $1))))) (dir:<a,<dir,t>> $0 forward:dir) (move:<a,t> $0) (len:<a,<n,t>> $0 1:n)))
RIGHT[I](18,19,0);FORWARD(18,19,90);(19, 19, 90)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(19,19,90);(19, 19, 0)
go forward one segment to the intersection with the blue-tiled hall
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (blue:<ps,t> $2) (hall:<ps,t> $2)))) $1))))) (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 1:n)))
FORWARD(19,19,0);(19, 18, 0)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(19,18,0);(19, 18, 270)
go to the intersection with the yellow-tiled hall , passing a chair
(lambda $0:a (and:<t*,t> (pass:<a,<ps,t>> $0 (a:<<e,t>,e> chair:<ps,t>)) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (honeycomb:<ps,t> $2)))) $1))))) (move:<a,t> $0)))
FORWARD(19,18,270);FORWARD(18,18,270);FORWARD(17,18,270);FORWARD(16,18,270);(15, 18, 270)
this intersection contains a hatrack
(intersect:<ps,<ps,t>> (a:<<e,t>,e> hatrack:<ps,t>) (io:<<e,t>,e> intersection:<ps,t>))
(15, 18, 270)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(15,18,270);(15, 18, 180)
go forward two segments
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 2:n)))
FORWARD(15,18,180);FORWARD(15,19,180);(15, 20, 180)
this is position x
(intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $0:e true:t)))
(15, 20, 180)

EDA_Jelly0_1_2_Dirs_2
map=jelly	efficiency=(1.0,0.0)	implicit=False	numFollowers=7	confidence=(5.857142857142857,0.3499271061118826)	directionRating=(5.428571428571429,0.49487165930539345)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=1	x=2	correct=True
turn so the wall is on your back
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (intersect:<ps,<ps,t>> (orient:<ps,<dir,ps>> you:ps back:dir) (io:<<e,t>,e> wall:<ps,t>))) (turn:<a,t> $0)))
LEFT(19,16,0);LEFT(19,16,270);LEFT(19,16,180);LEFT(19,16,90);(19, 16, 0)
walk forward once
(lambda $0:a (and:<t*,t> (len:<a,<n,t>> $0 1:n) (dir:<a,<dir,t>> $0 forward:dir) (move:<a,t> $0)))
FORWARD(19,16,0);(19, 15, 0)
turn right onto the green hallway
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (grass:<ps,t> $1)))))) (dir:<a,<dir,t>> $0 right:dir) (turn:<a,t> $0)))
RIGHT(19,15,0);(19, 15, 90)
walk to the end
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (end:<ps,<ps,t>> $1 (io:<<e,t>,e> hall:<ps,t>))))) (move:<a,t> $0)))
FORWARD(19,15,90);FORWARD(20,15,90);FORWARD(21,15,90);FORWARD(22,15,90);(23, 15, 90)
turn right and walk forward once
(lambda $0:a[] (and:<t*,t> (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 0:ind) right:dir) (turn:<a,t> (i:<a[],<ind,a>> $0 0:ind)) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (len:<a,<n,t>> (i:<a[],<ind,a>> $0 1:ind) 1:n) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) forward:dir) (move:<a,t> (i:<a[],<ind,a>> $0 1:ind))))
RIGHT(23,15,90);FORWARD(23,15,180);(23, 16, 180)

KXP_Jelly0_6_4_Dirs_1
map=jelly	efficiency=(0.6111111666666666,0.44790321512964404)	implicit=True	numFollowers=6	confidence=(5.166666666666667,0.8975274678557507)	directionRating=(3.8333333333333335,0.6871842709362768)	annotated=True	targetFound=(0.6666666666666666,0.4714045207910317)	valid=True	y=6	x=4	correct=True
foward , left , left , all the way till almost the end , make a laft into fishy area , go to end
(lambda $0:a[] (and:<t*,t> (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 0:ind) forward:dir) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) left:dir) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 1:ind) (i:<a[],<ind,a>> $0 2:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 2:ind) left:dir) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 2:ind) (i:<a[],<ind,a>> $0 3:ind)) (post:<a,<t,t>> (i:<a[],<ind,a>> $0 3:ind) (distance:<ps,<ps,<n,t>>> you:ps (io:<<e,t>,e> (lambda $1:e (end:<ps,<ps,t>> $1 (io:<<e,t>,e> hall:<ps,t>)))) 1:n)) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 3:ind) (i:<a[],<ind,a>> $0 4:ind)) (turn:<a,t> (i:<a[],<ind,a>> $0 4:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 4:ind) left:dir) (post:<a,<t,t>> (i:<a[],<ind,a>> $0 4:ind) (front:<ps,<ps,t>> you:ps (a:<<e,t>,e> fish_w:<ps,t>))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 4:ind) (i:<a[],<ind,a>> $0 5:ind)) (move:<a,t> (i:<a[],<ind,a>> $0 5:ind)) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 5:ind) (a:<<e,t>,e> (lambda $3:e (end:<ps,<ps,t>> $3 (io:<<e,t>,e> hall:<ps,t>)))))))
RIGHT[I](18,19,0);FORWARD(18,19,90);LEFT(19,19,90);FORWARD[I](19,19,0);LEFT(19,18,0);FORWARD(19,18,270);FORWARD(18,18,270);FORWARD(17,18,270);FORWARD(16,18,270);LEFT(15,18,270);FORWARD(15,18,180);FORWARD(15,19,180);(15, 20, 180)

KLS_L0_4_2_Dirs_1
map=l	efficiency=(1.0,0.0)	implicit=True	numFollowers=5	confidence=(5.8,0.4)	directionRating=(5.2,0.7483314773547882)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=4	x=2	correct=True
take the pink path until the intersection of the red brick path
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (brick:<ps,t> $2)))) $1))))) (move:<a,t> $0) (while:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (rose:<ps,t> $3)))))))
LEFT[I](24,21,0);FORWARD(24,21,270);(23, 21, 270)
go left onto the red brick
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (brick:<ps,t> $1)))))) (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(23,21,270);(23, 21, 180)
then take a right onto the black path at that intersection
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir) (pre:<a,<ps,t>> $0 (io:<<e,t>,e> intersection:<ps,t>)) (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (stone:<ps,t> $1) (hall:<ps,t> $1))))))))
FORWARD[I](23,21,180);FORWARD[I](23,22,180);RIGHT(23,23,180);(23, 23, 270)
go all the way until the intersection of the black and yellow paths and this is x
(lambda $0:a (and:<t*,t> (post:<a,<t,t>> $0 (intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $1:e true:t)))) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (intersection:<ps,t> $2) (intersect:<ps,<ps,t>> (io:<<e,t>,e> stone:<ps,t>) $2) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (honeycomb:<ps,t> $3) (hall:<ps,t> $3)))) $2))))) (move:<a,t> $0)))
FORWARD(23,23,270);FORWARD(22,23,270);(21, 23, 270)

WLH_Grid0_6_5_Dirs_1
map=grid	efficiency=(1.0,0.0)	implicit=False	numFollowers=5	confidence=(6.0,0.0)	directionRating=(5.6,0.48989794855663565)	annotated=True	targetFound=(1.0,0.0)	valid=True	y=6	x=5	correct=True
face the chair at y
(lambda $0:a (and:<t*,t> (pre:<a,<ps,t>> $0 y:ps) (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> chair:<ps,t>)))))
LEFT(2,7,0);(2, 7, 270)
move to it
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (to:<a,<ps,t>> $0 (io:<<e,t>,e> chair:<ps,t>))))
FORWARD(2,7,270);FORWARD(1,7,270);(0, 7, 270)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(0,7,270);(0, 7, 180)
you should see blue carpet
(front:<ps,<ps,t>> (a:<<e,t>,e> (lambda $0:e (and:<t*,t> (blue:<ps,t> $0) (hall:<ps,t> $0)))) you:ps)
(0, 7, 180)
walk along the blue past a stool and a sofa
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (while:<a,<ps,t>> $0 (io:<<e,t>,e> blue:<ps,t>)) (pass:<a,<ps,t>> $0 (a:<<e,t>,e> barstool:<ps,t>)) (pass:<a,<ps,t>> $0 (a:<<e,t>,e> sofa:<ps,t>))))
FORWARD(0,7,180);FORWARD(0,8,180);FORWARD(0,9,180);FORWARD(0,10,180);(0, 11, 180)
stop at the hat rack
(intersect:<ps,<ps,t>> (io:<<e,t>,e> hatrack:<ps,t>) you:ps)
(0, 11, 180)
turn left
(lambda $0:a (and:<t*,t> (dir:<a,<dir,t>> $0 left:dir) (turn:<a,t> $0)))
LEFT(0,11,180);(0, 11, 90)
move straight into the corner
(lambda $0:a (and:<t*,t> (to:<a,<ps,t>> $0 (io:<<e,t>,e> corner:<ps,t>)) (dir:<a,<dir,t>> $0 forward:dir) (move:<a,t> $0)))
FORWARD(0,11,90);(1, 11, 90)
this is x
(intersect:<ps,<ps,t>> x:ps (io:<<e,t>,e> (lambda $0:e true:t)))
(1, 11, 90)

